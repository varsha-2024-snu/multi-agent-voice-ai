MAS->Multi-agent systems:

It is a collection of multiple ai agents that collaboratively work towards solving a problem
-> each of those agents individual role and capabilities
-> llms are the heart of ai agents, they help in reasoning, planning and performing tasks
-> agents share knowledge with each other

Architecture of mas:
Centralised network: a central manager manages the agent interaction. They have a global knowledge base. But It has scalability issues and a single point of failure

Decentralised network: agents share data locally with neighbours

Structure in mas:
Hierarchical: tree-like
Holonic: sub agents part of bigger agents
Coalition: temporary grouping of agents for specific goals. Will get disbanded after completion of goals.
Teams: permanent teams of agents working towards a goal.


Multiagent architectures:
network : a fully connected graph. Each agent decides with other to call next
Supervisor: a central llm decides which agent to call next. Easier to parallelly execute agents
Supervisor (tool calling): agents act as tools. It follows a ReAct like pattern
Hierarchical: its has a multi-tiered flow. Duiatble for organising teams within the agents,
Custom workflow: it has partial dynamic routing. They static edges defined in the graph.


Handoff between agents:

In langraph, each agents are denoted as graph nodes. So each of them have a command to route to the next agent or update the graph state. Additionally, handoffs can also be used as tools.
